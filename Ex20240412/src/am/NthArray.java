package am;

public class NthArray {
	/*
	
		2차원 배열 : 1차원 배열을 1개 이상 가진 배열.  int[][] ar3 = new int[a][b] 	a : 저장할 1차원 배열의 수	< 2차원 배열에게 가장 중요
																					b : 각 1차원 배열의 길이	< 별로 중요하지않음
		3차원 배열 : 2차원 배열을 1개 이상 가진 배열.
		4차원 배열 : ...3차원 배열을 1개 이상 가진 배열.
		n차원 배열 : n-1차원 배열을 1개 이상 가진 배열.
		
		
		int[][] t1 = new int[4][]; 1차원 배열 4개를 가지는 2차원 배열. 하지만 저장되는 1차원 배열의 크기는 알지 못해도 된다.
		2차원 배열의 객체가 메모리 영역에 생성되면 생성된 공간에 1차원 배열의 주소를 저장한다.
		
		배열은 객체로 저장되기 때문에 가능하다.
		같은 자료형의 배열이기 때문에 배열의 크기가 다르더라도 같은 자료형의 객체로 인식되어 한 배열에 저장할 수 있다.
	
		t1[0][2] : t1의 [0]번지 > [0]번지 안의 주소값이 가리키고 있는 배열의 [2]번지






	 */

}
